import osimport subprocessfrom telegram import Updatefrom telegram.ext import Updater, CommandHandler, CallbackContext# Путь к данным WG-EasyWG_DIR = "/root/.wg-easy"  # Или /var/lib/docker/volumes/wg-easy/_datadef add_client(update: Update, context: CallbackContext):    client_name = update.message.text.split()[1]  # /add имя_клиента        # Генерация ключей    private_key = subprocess.getoutput("wg genkey")    public_key = subprocess.getoutput(f"echo '{private_key}' | wg pubkey")        # Добавление в wg0.conf    with open(f"{WG_DIR}/wg0.conf", "a") as f:        f.write(f"\n[Peer]\nPublicKey = {public_key}\nAllowedIPs = 10.8.0.{randint(2,254)}/32\n")        # Создание конфига клиента    client_conf = f"""[Interface]PrivateKey = {private_key}Address = 10.8.0.X/24DNS = 1.1.1.1[Peer]PublicKey = 7hdEHuQ+4iW8PRDWmi19IHInhOFL/Y7cHPNEwcvHMSA=Endpoint = 80.74.28.21:51820AllowedIPs = 0.0.0.0/0"""    with open(f"{WG_DIR}/{client_name}.conf", "w") as f:        f.write(client_conf)        # Перезагрузка WireGuard    os.system("docker exec wg-easy wg-quick down wg0 && wg-quick up wg0")        # Отправка файла пользователю    update.message.reply_document(document=open(f"{WG_DIR}/{client_name}.conf", "rb"))updater = Updater("8155141877:AAHspExiqZFAfDmQc2VpobSz-gseFzDKKmg")updater.dispatcher.add_handler(CommandHandler("add", add_client))updater.start_polling()